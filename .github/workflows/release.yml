name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
          - goos: linux
            goarch: arm64
            suffix: linux-arm64
          - goos: linux
            goarch: arm
            goarm: 7
            suffix: linux-armv7
          - goos: darwin
            goarch: amd64
            suffix: darwin-amd64
          - goos: darwin
            goarch: arm64
            suffix: darwin-arm64
          - goos: windows
            goarch: amd64
            suffix: windows-amd64.exe
          - goos: windows
            goarch: arm64
            suffix: windows-arm64.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Download dependencies
      run: go mod download

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        GOARM: ${{ matrix.goarm }}
      run: |
        if [ "${{ matrix.goos }}" = "windows" ]; then
          go build -ldflags="-s -w" -o ss-plus-${{ matrix.suffix }} .
        else
          go build -ldflags="-s -w" -o ss-plus-${{ matrix.suffix }} .
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ss-plus-${{ matrix.suffix }}
        path: ss-plus-${{ matrix.suffix }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Prepare release assets
      run: |
        mkdir -p release
        find ./artifacts -name "ss-plus-*" -exec cp {} ./release/ \;
        ls -la ./release/

    - name: Create checksums
      run: |
        cd release
        sha256sum * > checksums.txt
        cat checksums.txt

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/*
        body: |
          ## SS Plus with IP Geolocation

          This release includes pre-compiled binaries for multiple architectures.
          
          ### Usage
          ```bash
          # Download the appropriate binary for your system
          # Make it executable (Linux/macOS)
          chmod +x ss-plus-linux-amd64
          
          # Run with ss command arguments
          ./ss-plus-linux-amd64 -nltp
          ```
          
          ### Supported Platforms
          - Linux (x86_64, ARM64, ARMv7)
          - macOS (Intel, Apple Silicon)
          - Windows (x86_64, ARM64)
          
          ### Files
          - `checksums.txt` - SHA256 checksums for all binaries
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
